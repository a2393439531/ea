<?xml version="1.0" encoding="GBK"?>
<document>

<br/><p><b>通用构件项目</b></p>
<br/>jdk-api手册：<a target="_blank" href="/java/api_zh/index.html">中文chm文档</a>  

<b>.异常-策略</b><br/>

<fieldset>
<legend>runtime异常扩展 </legend>
<pre>
 异常的基础类，各模块自己定义异常实体类,BaseException是运行时异常，不用捕捉。
 比较适合代码编写。
 从这里继承 BaseException--> CacheException -->CacheMemcacheException abstract
 class BaseException（ 的定义,是不能实例化的）
 通过title可以方便错误定位,使用方法 ,参考测试案例
 throw new CacheMemcacheException(参数不能为空, new NullPointerException());
</pre>
</fieldset>

<b>.配置文件-策略</b><br/>

<fieldset>
<legend>Joran</legend>
<pre> 
Joran是个强大的、通用的配置系统，你可以在自己的项目里使用Joran以获得巨大的作用
</pre>        
</fieldset>

<fieldset>
<legend>使用spring的配置格式</legend>
<pre> 
   好处是直接复用spring的模式,如果项目是使用spring的话,可以自定义xml配置文件，具体参考apache-ftp的实现模式
</pre>        
</fieldset>





<p><b>.各种常用组件</b></p>

<fieldset>
<legend>读写系统变量，注册表 </legend>
<pre>java.util.prefs.Preferences
代码参考com.sunrise.ueaac.base.common.jdk.util
</pre>
</fieldset>

	<fieldset>
		<legend>sql数据库调用接口 </legend>
		<p>sql数据库调用接口</p>
		<p>io输入输出API</p>
		<p>配置文件</p>		
	</fieldset>





<fieldset>
<legend>分布式缓存和本地缓存</legend>
<pre> 
*java.util.logging :Java日志工具的类和接口.
参考：com.sunrise.ueaac.base.common.log.jdk.util.logging 
<a target="_blank" href="jdklog.html">配置</a> 
</pre>        
</fieldset>
	





	
<p><b>3.与业务有关的公共构件</b></p>
<p>组织架构和权限的读取API</p>      

</document>
